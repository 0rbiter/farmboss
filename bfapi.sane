--os.unloadAPI("/farmboss/basics")
os.loadAPI("/farmboss/basics")

args = { ... }
arg = { }

if args[1] then 
  arg = basics.explode(args[1])
end

mode = arg[1]
width = arg[2]
height = arg[3]

function init(m, w, h)
  assert(m and w and h, "Wrong parameters!")
  print("Assertion?")
    mode = m
  width = w
  height = h
end

function checkInventory(mode, width, height)
  if not mode or not width or not height then
    print("Wrong parameters!")
    return false
  elseif mode == "dirt" then
    print(mode.." "..width.."x"..height)
    for i = 1, 4 do
      if not ((turtle.getItemCount(i) + turtle.getItemCount(i+4)) == (width*height)-1) then
        print("Fill 1-4 with 4x64 dirt and fill 5-8 with 16 dirt each")
        return false
      end
    end
    return true
  elseif mode == "farm" then
    os.loadAPI("/farmboss/farmapi")        
  else
    print("What mode? "..mode.." wtf? ")
    return false
  end
end

function selectedSlot()
  return turtle.getSelectedSlot()
end

function ItemCount(x)
  return turtle.getItemCount(x)
end

function selectSlot(x)
  return turtle.select(x)
end

function getSlotNr()
  selectSlot(1)
  for i = 1, 4 do
    if ItemCount(selectedSlot()) > 0 then
      return i
    elseif ItemCount(selectedSlot()+4) > 0 then
      return i+4
    else
      assert(false,"Error, no items!")
    end
  end
  return 0  
end


function up()
  return turtle.up()
end

function down()
  return turtle.down()
end

function destroy()
  return turtle.digDown()
end

function plant()
  return turtle.placeDown()
end

function plantUp()
  return turtle.placeUp()
end

function put()
  turtle.place()
end

function forward(x)
  if not x then turtle.forward()
  else
    for i = 1, x do
      turtle.forward()
    end
  end
end

function back(x)
  if not x then turtle.back()
  else
    for i = 1, x do
      turtle.back()
    end
  end
end

function turnLeft(x)
  return turtle.turnLeft(x)
end

function turnRight(x)
  return turtle.turnRight()
end

function goHome(width, height)
  print("Waiting ->")
  sleep(3)
  forward(height)
  turnRight()
  print(width.." "..height)
  sleep(3)
  forward(tonumber(width))
  turnRight()
  down()
end

function changeLine(linenr)
  if ((linenr % 2) > 0) then
    turnRight()
    forward()
    turnRight()  
  elseif ((linenr % 2) == 0) then
    turnLeft()
    forward()
    turnLeft()
  else
    print("fatal error")
  end
end


function start(mode, width, height)
  if not mode or not width or not height then
    print("Wrong parameters!")
    return false
  end
  
  if mode == "dirt" then
    bfapi.init(mode, width, height)
    up()
    forward()
    selectSlot(1)
    for w = 1, width do
      for h = 1, height do
        print("Schritt "..w.."/"..h)
        assert(selectSlot(getSlotNr()),"Error")
        
        destroy()
        plant()
       
        
        if h == height then
          changeLine(w)
        else
        print("else...")
          forward()
        end
      end
    end
  bfapi.goHome()
  end
end
